function r(n, t) {
  for (let i = 0; i < t.length; i++) {
    const r = t[i];
    (r.enumerable = r.enumerable || !1),
      (r.configurable = !0),
      'value' in r && (r.writable = !0),
      Object.defineProperty(n, r.key, r);
  }
}
function Jt(n, t, i) {
  t && r(n.prototype, t),
    i && r(n, i),
    Object.defineProperty(n, 'prototype', { writable: !1 });
}
/*!
 * Splide.js
 * Version  : 4.1.2
 * License  : MIT
 * Copyright: 2022 Naotoshi Fujita
 */
let n;
let t;
(n = this),
  (t = function () {
    const v = '(prefers-reduced-motion: reduce)';
    const G = 4;
    const rn = 5;
    const r = {
      CREATED: 1,
      MOUNTED: 2,
      IDLE: 3,
      MOVING: G,
      SCROLLING: rn,
      DRAGGING: 6,
      DESTROYED: 7,
    };
    function D(n) {
      n.length = 0;
    }
    function o(n, t, i) {
      return Array.prototype.slice.call(n, t, i);
    }
    function R(n) {
      return n.bind.apply(n, [null].concat(o(arguments, 1)));
    }
    function on() {}
    const p = setTimeout;
    function h(n) {
      return requestAnimationFrame(n);
    }
    function u(n, t) {
      return typeof t === n;
    }
    function un(n) {
      return !c(n) && u('object', n);
    }
    const e = Array.isArray;
    const x = R(u, 'function');
    const C = R(u, 'string');
    const en = R(u, 'undefined');
    function c(n) {
      return n === null;
    }
    function m(n) {
      try {
        return n instanceof (n.ownerDocument.defaultView || window).HTMLElement;
      } catch (n) {
        return !1;
      }
    }
    function y(n) {
      return e(n) ? n : [n];
    }
    function g(n, t) {
      y(n).forEach(t);
    }
    function b(n, t) {
      return n.indexOf(t) > -1;
    }
    function k(n, t) {
      return n.push.apply(n, y(t)), n;
    }
    function A(t, n, i) {
      t &&
        g(n, function (n) {
          n && t.classList[i ? 'add' : 'remove'](n);
        });
    }
    function M(n, t) {
      A(n, C(t) ? t.split(' ') : t, !0);
    }
    function L(n, t) {
      g(t, n.appendChild.bind(n));
    }
    function O(n, i) {
      g(n, function (n) {
        const t = (i || n).parentNode;
        t && t.insertBefore(n, i);
      });
    }
    function cn(n, t) {
      return m(n) && (n.msMatchesSelector || n.matches).call(n, t);
    }
    function S(n, t) {
      n = n ? o(n.children) : [];
      return t
        ? n.filter(function (n) {
            return cn(n, t);
          })
        : n;
    }
    function fn(n, t) {
      return t ? S(n, t)[0] : n.firstElementChild;
    }
    const E = Object.keys;
    function w(t, i, n) {
      t &&
        (n ? E(t).reverse() : E(t)).forEach(function (n) {
          n !== '__proto__' && i(t[n], n);
        });
    }
    function an(r) {
      return (
        o(arguments, 1).forEach(function (i) {
          w(i, function (n, t) {
            r[t] = i[t];
          });
        }),
        r
      );
    }
    function d(i) {
      return (
        o(arguments, 1).forEach(function (n) {
          w(n, function (n, t) {
            e(n)
              ? (i[t] = n.slice())
              : un(n)
                ? (i[t] = d({}, un(i[t]) ? i[t] : {}, n))
                : (i[t] = n);
          });
        }),
        i
      );
    }
    function sn(t, n) {
      g(n || E(t), function (n) {
        delete t[n];
      });
    }
    function P(n, i) {
      g(n, function (t) {
        g(i, function (n) {
          t && t.removeAttribute(n);
        });
      });
    }
    function I(i, t, r) {
      un(t)
        ? w(t, function (n, t) {
            I(i, t, n);
          })
        : g(i, function (n) {
            c(r) || r === '' ? P(n, t) : n.setAttribute(t, String(r));
          });
    }
    function j(n, t, i) {
      n = document.createElement(n);
      return t && (C(t) ? M : I)(n, t), i && L(i, n), n;
    }
    function _(n, t, i) {
      if (en(i)) return getComputedStyle(n)[t];
      c(i) || (n.style[t] = `${i}`);
    }
    function ln(n, t) {
      _(n, 'display', t);
    }
    function dn(n) {
      (n.setActive && n.setActive()) || n.focus({ preventScroll: !0 });
    }
    function z(n, t) {
      return n.getAttribute(t);
    }
    function vn(n, t) {
      return n && n.classList.contains(t);
    }
    function N(n) {
      return n.getBoundingClientRect();
    }
    function T(n) {
      g(n, function (n) {
        n && n.parentNode && n.parentNode.removeChild(n);
      });
    }
    function hn(n) {
      return fn(new DOMParser().parseFromString(n, 'text/html').body);
    }
    function F(n, t) {
      n.preventDefault(),
        t && (n.stopPropagation(), n.stopImmediatePropagation());
    }
    function pn(n, t) {
      return n && n.querySelector(t);
    }
    function gn(n, t) {
      return t ? o(n.querySelectorAll(t)) : [];
    }
    function X(n, t) {
      A(n, t, !1);
    }
    function mn(n) {
      return n.timeStamp;
    }
    function W(n) {
      return C(n) ? n : n ? `${n}px` : '';
    }
    const yn = 'splide';
    const f = `data-${yn}`;
    function bn(n, t) {
      if (!n) throw new Error(`[${yn}] ${t || ''}`);
    }
    const Y = Math.min;
    const wn = Math.max;
    const xn = Math.floor;
    const kn = Math.ceil;
    const U = Math.abs;
    function Sn(n, t, i) {
      return U(n - t) < i;
    }
    function En(n, t, i, r) {
      const o = Y(t, i);
      var t = wn(t, i);
      return r ? o < n && n < t : o <= n && n <= t;
    }
    function q(n, t, i) {
      const r = Y(t, i);
      var t = wn(t, i);
      return Y(wn(r, n), t);
    }
    function Ln(n) {
      return (n > 0) - (n < 0);
    }
    function On(t, n) {
      return (
        g(n, function (n) {
          t = t.replace('%s', `${n}`);
        }),
        t
      );
    }
    function An(n) {
      return n < 10 ? `0${n}` : `${n}`;
    }
    const _n = {};
    function zn() {
      let c = [];
      function i(n, i, r) {
        g(n, function (t) {
          t &&
            g(i, function (n) {
              n.split(' ').forEach(function (n) {
                n = n.split('.');
                r(t, n[0], n[1]);
              });
            });
        });
      }
      return {
        bind(n, t, u, e) {
          i(n, t, function (n, t, i) {
            const r = 'addEventListener' in n;
            const o = r
              ? n.removeEventListener.bind(n, t, u, e)
              : n.removeListener.bind(n, u);
            r ? n.addEventListener(t, u, e) : n.addListener(u),
              c.push([n, t, i, u, o]);
          });
        },
        unbind(n, t, o) {
          i(n, t, function (t, i, r) {
            c = c.filter(function (n) {
              return (
                !!(
                  n[0] !== t ||
                  n[1] !== i ||
                  n[2] !== r ||
                  (o && n[3] !== o)
                ) || (n[4](), !1)
              );
            });
          });
        },
        dispatch(n, t, i) {
          let r;
          return (
            typeof CustomEvent === 'function'
              ? (r = new CustomEvent(t, { bubbles: !0, detail: i }))
              : (r = document.createEvent('CustomEvent')).initCustomEvent(
                  t,
                  !0,
                  !1,
                  i,
                ),
            n.dispatchEvent(r),
            r
          );
        },
        destroy() {
          c.forEach(function (n) {
            n[4]();
          }),
            D(c);
        },
      };
    }
    const B = 'mounted';
    const H = 'move';
    const Dn = 'moved';
    const Mn = 'click';
    const Pn = 'active';
    const In = 'inactive';
    const Rn = 'visible';
    const Cn = 'hidden';
    const J = 'refresh';
    const K = 'updated';
    const jn = 'resize';
    const Nn = 'resized';
    const Tn = 'scroll';
    const V = 'scrolled';
    const a = 'destroy';
    const Gn = 'navigation:mounted';
    const Fn = 'autoplay:play';
    const Xn = 'autoplay:pause';
    const Wn = 'lazyload:loaded';
    const Yn = 'sk';
    const Un = 'sh';
    function Q(n) {
      const i = n ? n.event.bus : document.createDocumentFragment();
      const r = zn();
      return (
        n && n.event.on(a, r.destroy),
        an(r, {
          bus: i,
          on(n, t) {
            r.bind(i, y(n).join(' '), function (n) {
              t.apply(t, e(n.detail) ? n.detail : []);
            });
          },
          off: R(r.unbind, i),
          emit(n) {
            r.dispatch(i, n, o(arguments, 1));
          },
        })
      );
    }
    function qn(t, n, i, r) {
      let o;
      let u;
      const e = Date.now;
      let c = 0;
      let f = !0;
      let a = 0;
      function s() {
        if (!f) {
          if (
            ((c = t ? Y((e() - o) / t, 1) : 1),
            i && i(c),
            c >= 1 && (n(), (o = e()), r && ++a >= r))
          )
            return l();
          u = h(s);
        }
      }
      function l() {
        f = !0;
      }
      function d() {
        u && cancelAnimationFrame(u), (f = !(u = c = 0));
      }
      return {
        start(n) {
          n || d(), (o = e() - (n ? c * t : 0)), (f = !1), (u = h(s));
        },
        rewind() {
          (o = e()), (c = 0), i && i(c);
        },
        pause: l,
        cancel: d,
        set(n) {
          t = n;
        },
        isPaused() {
          return f;
        },
      };
    }
    function s(n) {
      let t = n;
      return {
        set(n) {
          t = n;
        },
        is(n) {
          return b(y(n), t);
        },
      };
    }
    var n = 'Arrow';
    const Bn = `${n}Left`;
    const Hn = `${n}Right`;
    let t = `${n}Up`;
    var n = `${n}Down`;
    const Jn = 'ttb';
    const l = {
      width: ['height'],
      left: ['top', 'right'],
      right: ['bottom', 'left'],
      x: ['y'],
      X: ['Y'],
      Y: ['X'],
      ArrowLeft: [t, Hn],
      ArrowRight: [n, Bn],
    };
    const Z = 'role';
    const $ = 'tabindex';
    var i = 'aria-';
    const Kn = `${i}controls`;
    const Vn = `${i}current`;
    const Qn = `${i}selected`;
    const nn = `${i}label`;
    const Zn = `${i}labelledby`;
    const $n = `${i}hidden`;
    const nt = `${i}orientation`;
    const tt = `${i}roledescription`;
    const it = `${i}live`;
    const rt = `${i}busy`;
    const ot = `${i}atomic`;
    const ut = [Z, $, 'disabled', Kn, Vn, nn, Zn, $n, nt, tt];
    var i = `${yn}__`;
    const et = yn;
    const ct = `${i}track`;
    const ft = `${i}list`;
    const at = `${i}slide`;
    const st = `${at}--clone`;
    const lt = `${at}__container`;
    const dt = `${i}arrows`;
    const vt = `${i}arrow`;
    const ht = `${vt}--prev`;
    const pt = `${vt}--next`;
    const gt = `${i}pagination`;
    const mt = `${gt}__page`;
    const yt = `${i}progress` + `__bar`;
    const bt = `${i}toggle`;
    const wt = `${i}sr`;
    const tn = 'is-active';
    const xt = 'is-prev';
    const kt = 'is-next';
    const St = 'is-visible';
    const Et = 'is-loading';
    const Lt = 'is-focus-in';
    const Ot = 'is-overflow';
    const At = [tn, St, xt, kt, Et, Lt, Ot];
    const _t = 'touchstart mousedown';
    const zt = 'touchmove mousemove';
    const Dt = 'touchend touchcancel mouseup click';
    const Mt = 'slide';
    const Pt = 'loop';
    const It = 'fade';
    function Rt(o, r, t, u) {
      let e;
      const n = Q(o);
      const i = n.on;
      const c = n.emit;
      const f = n.bind;
      const a = o.Components;
      const s = o.root;
      const l = o.options;
      const d = l.isNavigation;
      const v = l.updateOnMove;
      const h = l.i18n;
      const p = l.pagination;
      const g = l.slideFocus;
      const m = a.Direction.resolve;
      const y = z(u, 'style');
      const b = z(u, nn);
      const w = t > -1;
      const x = fn(u, `.${lt}`);
      function k() {
        const n = o.splides
          .map(function (n) {
            n = n.splide.Components.Slides.getAt(r);
            return n ? n.slide.id : '';
          })
          .join(' ');
        I(u, nn, On(h.slideX, (w ? t : r) + 1)),
          I(u, Kn, n),
          I(u, Z, g ? 'button' : ''),
          g && P(u, tt);
      }
      function S() {
        e || E();
      }
      function E() {
        let n;
        let t;
        let i;
        e ||
          ((n = o.index),
          (i = L()) !== vn(u, tn) &&
            (A(u, tn, i), I(u, Vn, (d && i) || ''), c(i ? Pn : In, O)),
          (i = (function () {
            if (o.is(It)) return L();
            const n = N(a.Elements.track);
            const t = N(u);
            const i = m('left', !0);
            const r = m('right', !0);
            return xn(n[i]) <= kn(t[i]) && xn(t[r]) <= kn(n[r]);
          })()),
          (t = !i && (!L() || w)),
          o.state.is([G, rn]) || I(u, $n, t || ''),
          I(gn(u, l.focusableNodes || ''), $, t ? -1 : ''),
          g && I(u, $, t ? -1 : 0),
          i !== vn(u, St) && (A(u, St, i), c(i ? Rn : Cn, O)),
          i ||
            document.activeElement !== u ||
            ((t = a.Slides.getAt(o.index)) && dn(t.slide)),
          A(u, xt, r === n - 1),
          A(u, kt, r === n + 1));
      }
      function L() {
        const n = o.index;
        return n === r || (l.cloneStatus && n === t);
      }
      var O = {
        index: r,
        slideIndex: t,
        slide: u,
        container: x,
        isClone: w,
        mount() {
          w ||
            ((u.id = `${s.id}-slide${An(r + 1)}`),
            I(u, Z, p ? 'tabpanel' : 'group'),
            I(u, tt, h.slide),
            I(u, nn, b || On(h.slideLabel, [r + 1, o.length]))),
            f(u, 'click', R(c, Mn, O)),
            f(u, 'keydown', R(c, Yn, O)),
            i([Dn, Un, V], E),
            i(Gn, k),
            v && i(H, S);
        },
        destroy() {
          (e = !0),
            n.destroy(),
            X(u, At),
            P(u, ut),
            I(u, 'style', y),
            I(u, nn, b || '');
        },
        update: E,
        style(n, t, i) {
          _((i && x) || u, n, t);
        },
        isWithin(n, t) {
          return (
            (n = U(n - r)),
            (n = w || (!l.rewind && !o.is(Pt)) ? n : Y(n, o.length - n)) <= t
          );
        },
      };
      return O;
    }
    const Ct = `${f}-interval`;
    const jt = { passive: !1, capture: !0 };
    const Nt = { Spacebar: ' ', Right: Hn, Left: Bn, Up: t, Down: n };
    function Tt(n) {
      return (n = C(n) ? n : n.key), Nt[n] || n;
    }
    const Gt = 'keydown';
    const Ft = `${f}-lazy`;
    const Xt = `${Ft}-srcset`;
    const Wt = `[${Ft}], [${Xt}]`;
    const Yt = [' ', 'Enter'];
    const Ut = Object.freeze({
      __proto__: null,
      Media(r, n, o) {
        const u = r.state;
        const t = o.breakpoints || {};
        const e = o.reducedMotion || {};
        const i = zn();
        const c = [];
        function f(n) {
          n && i.destroy();
        }
        function a(n, t) {
          t = matchMedia(t);
          i.bind(t, 'change', s), c.push([n, t]);
        }
        function s() {
          const n = u.is(7);
          const t = o.direction;
          const i = c.reduce(function (n, t) {
            return d(n, t[1].matches ? t[0] : {});
          }, {});
          sn(o),
            l(i),
            o.destroy
              ? r.destroy(o.destroy === 'completely')
              : n
                ? (f(!0), r.mount())
                : t !== o.direction && r.refresh();
        }
        function l(n, t, i) {
          d(o, n),
            t && d(Object.getPrototypeOf(o), n),
            (!i && u.is(1)) || r.emit(K, o);
        }
        return {
          setup() {
            const i = o.mediaQuery === 'min';
            E(t)
              .sort(function (n, t) {
                return i ? +n - +t : +t - +n;
              })
              .forEach(function (n) {
                a(t[n], `(${i ? 'min' : 'max'}-width:${n}px)`);
              }),
              a(e, v),
              s();
          },
          destroy: f,
          reduce(n) {
            matchMedia(v).matches && (n ? d(o, e) : sn(o, E(e)));
          },
          set: l,
        };
      },
      Direction(n, t, o) {
        return {
          resolve(n, t, i) {
            const r =
              (i = i || o.direction) !== 'rtl' || t ? (i === Jn ? 0 : -1) : 1;
            return (
              (l[n] && l[n][r]) ||
              n.replace(/width|left|right/i, function (n, t) {
                n = l[n.toLowerCase()][r] || n;
                return t > 0 ? n.charAt(0).toUpperCase() + n.slice(1) : n;
              })
            );
          },
          orient(n) {
            return n * (o.direction === 'rtl' ? 1 : -1);
          },
        };
      },
      Elements(n, t, i) {
        let r;
        let o;
        let u;
        const e = Q(n);
        const c = e.on;
        const f = e.bind;
        const a = n.root;
        const s = i.i18n;
        const l = {};
        const d = [];
        let v = [];
        let h = [];
        function p() {
          (r = y(`.${ct}`)),
            (o = fn(r, `.${ft}`)),
            bn(r && o, 'A track/list element is missing.'),
            k(d, S(o, `.${at}:not(.${st})`)),
            w(
              {
                arrows: dt,
                pagination: gt,
                prev: ht,
                next: pt,
                bar: yt,
                toggle: bt,
              },
              function (n, t) {
                l[t] = y(`.${n}`);
              },
            ),
            an(l, { root: a, track: r, list: o, slides: d });
          const n =
            a.id ||
            (function (n) {
              return `${n}${An((_n[n] = (_n[n] || 0) + 1))}`;
            })(yn);
          const t = i.role;
          (a.id = n),
            (r.id = r.id || `${n}-track`),
            (o.id = o.id || `${n}-list`),
            !z(a, Z) && a.tagName !== 'SECTION' && t && I(a, Z, t),
            I(a, tt, s.carousel),
            I(o, Z, 'presentation'),
            m();
        }
        function g(n) {
          const t = ut.concat('style');
          D(d), X(a, v), X(r, h), P([r, o], t), P(a, n ? t : ['style', tt]);
        }
        function m() {
          X(a, v),
            X(r, h),
            (v = b(et)),
            (h = b(ct)),
            M(a, v),
            M(r, h),
            I(a, nn, i.label),
            I(a, Zn, i.labelledby);
        }
        function y(n) {
          n = pn(a, n);
          return n &&
            (function (n, t) {
              if (x(n.closest)) return n.closest(t);
              for (var i = n; i && i.nodeType === 1 && !cn(i, t); )
                i = i.parentElement;
              return i;
            })(n, `.${et}`) === a
            ? n
            : void 0;
        }
        function b(n) {
          return [
            `${n}--${i.type}`,
            `${n}--${i.direction}`,
            i.drag && `${n}--draggable`,
            i.isNavigation && `${n}--nav`,
            n === et && tn,
          ];
        }
        return an(l, {
          setup: p,
          mount() {
            c(J, g),
              c(J, p),
              c(K, m),
              f(
                document,
                `${_t} keydown`,
                function (n) {
                  u = n.type === 'keydown';
                },
                { capture: !0 },
              ),
              f(a, 'focusin', function () {
                A(a, Lt, !!u);
              });
          },
          destroy: g,
        });
      },
      Slides(r, o, u) {
        let n = Q(r);
        const t = n.on;
        const e = n.emit;
        const c = n.bind;
        const f = (n = o.Elements).slides;
        const a = n.list;
        const s = [];
        function i() {
          f.forEach(function (n, t) {
            d(n, t, -1);
          });
        }
        function l() {
          h(function (n) {
            n.destroy();
          }),
            D(s);
        }
        function d(n, t, i) {
          t = Rt(r, t, i, n);
          t.mount(),
            s.push(t),
            s.sort(function (n, t) {
              return n.index - t.index;
            });
        }
        function v(n) {
          return n
            ? p(function (n) {
                return !n.isClone;
              })
            : s;
        }
        function h(n, t) {
          v(t).forEach(n);
        }
        function p(t) {
          return s.filter(
            x(t)
              ? t
              : function (n) {
                  return C(t) ? cn(n.slide, t) : b(y(t), n.index);
                },
          );
        }
        return {
          mount() {
            i(), t(J, l), t(J, i);
          },
          destroy: l,
          update() {
            h(function (n) {
              n.update();
            });
          },
          register: d,
          get: v,
          getIn(n) {
            const t = o.Controller;
            const i = t.toIndex(n);
            const r = t.hasFocus() ? 1 : u.perPage;
            return p(function (n) {
              return En(n.index, i, i + r - 1);
            });
          },
          getAt(n) {
            return p(n)[0];
          },
          add(n, o) {
            g(n, function (n) {
              let t;
              let i;
              let r;
              m((n = C(n) ? hn(n) : n)) &&
                ((t = f[o]) ? O(n, t) : L(a, n),
                M(n, u.classes.slide),
                (t = n),
                (i = R(e, jn)),
                (t = gn(t, 'img')),
                (r = t.length)
                  ? t.forEach(function (n) {
                      c(n, 'load error', function () {
                        --r || i();
                      });
                    })
                  : i());
            }),
              e(J);
          },
          remove(n) {
            T(
              p(n).map(function (n) {
                return n.slide;
              }),
            ),
              e(J);
          },
          forEach: h,
          filter: p,
          style(t, i, r) {
            h(function (n) {
              n.style(t, i, r);
            });
          },
          getLength(n) {
            return (n ? f : s).length;
          },
          isEnough() {
            return s.length > u.perPage;
          },
        };
      },
      Layout(t, n, i) {
        let r;
        let o;
        let u;
        const e = (a = Q(t)).on;
        const c = a.bind;
        const f = a.emit;
        var a = n.Slides;
        const s = n.Direction.resolve;
        const l = (n = n.Elements).root;
        const d = n.track;
        const v = n.list;
        const h = a.getAt;
        const p = a.style;
        function g() {
          (r = i.direction === Jn),
            _(l, 'maxWidth', W(i.width)),
            _(d, s('paddingLeft'), y(!1)),
            _(d, s('paddingRight'), y(!0)),
            m(!0);
        }
        function m(n) {
          const t = N(l);
          (!n && o.width === t.width && o.height === t.height) ||
            (_(
              d,
              'height',
              (function () {
                let n = '';
                r &&
                  (bn((n = b()), 'height or heightRatio is missing.'),
                  (n = `calc(${n} - ${y(!1)} - ${y(!0)})`));
                return n;
              })(),
            ),
            p(s('marginRight'), W(i.gap)),
            p('width', i.autoWidth ? null : W(i.fixedWidth) || (r ? '' : w())),
            p(
              'height',
              W(i.fixedHeight) || (r ? (i.autoHeight ? null : w()) : b()),
              !0,
            ),
            (o = t),
            f(Nn),
            u !== (u = O()) && (A(l, Ot, u), f('overflow', u)));
        }
        function y(n) {
          const t = i.padding;
          var n = s(n ? 'right' : 'left');
          return (t && W(t[n] || (un(t) ? 0 : t))) || '0px';
        }
        function b() {
          return W(i.height || N(v).width * i.heightRatio);
        }
        function w() {
          const n = W(i.gap);
          return `calc((100%${n && ` + ${n}`})/${i.perPage || 1}${
            n && ` - ${n}`
          })`;
        }
        function x() {
          return N(v)[s('width')];
        }
        function k(n, t) {
          n = h(n || 0);
          return n ? N(n.slide)[s('width')] + (t ? 0 : L()) : 0;
        }
        function S(n, t) {
          let i;
          var n = h(n);
          return n
            ? ((n = N(n.slide)[s('right')]),
              (i = N(v)[s('left')]),
              U(n - i) + (t ? 0 : L()))
            : 0;
        }
        function E(n) {
          return S(t.length - 1) - S(0) + k(0, n);
        }
        function L() {
          const n = h(0);
          return (n && parseFloat(_(n.slide, s('marginRight')))) || 0;
        }
        function O() {
          return t.is(It) || E(!0) > x();
        }
        return {
          mount() {
            let n;
            let t;
            let i;
            g(),
              c(
                window,
                'resize load',
                ((n = R(f, jn)),
                (i = qn(t || 0, n, null, 1)),
                function () {
                  i.isPaused() && i.start();
                }),
              ),
              e([K, J], g),
              e(jn, m);
          },
          resize: m,
          listSize: x,
          slideSize: k,
          sliderSize: E,
          totalSize: S,
          getPadding(n) {
            return parseFloat(_(d, s(`padding${n ? 'Right' : 'Left'}`))) || 0;
          },
          isOverflow: O,
        };
      },
      Clones(c, i, f) {
        let t;
        const r = Q(c);
        const n = r.on;
        const a = i.Elements;
        const s = i.Slides;
        const o = i.Direction.resolve;
        const l = [];
        function u() {
          if ((n(J, d), n([K, jn], v), (t = h()))) {
            const o = t;
            const u = s.get().slice();
            const e = u.length;
            if (e) {
              for (; u.length < o; ) k(u, u);
              k(u.slice(-o), u.slice(0, o)).forEach(function (n, t) {
                const i = t < o;
                const r = (function (n, t) {
                  n = n.cloneNode(!0);
                  return (
                    M(n, f.classes.clone),
                    (n.id = `${c.root.id}-clone${An(t + 1)}`),
                    n
                  );
                })(n.slide, t);
                i ? O(r, u[0].slide) : L(a.list, r),
                  k(l, r),
                  s.register(r, t - o + (i ? 0 : e), n.index);
              });
            }
            i.Layout.resize(!0);
          }
        }
        function d() {
          e(), u();
        }
        function e() {
          T(l), D(l), r.destroy();
        }
        function v() {
          const n = h();
          t !== n && (t < n || !n) && r.emit(J);
        }
        function h() {
          let n;
          let t = f.clones;
          return (
            c.is(Pt)
              ? en(t) &&
                (t =
                  ((n = f[o('fixedWidth')] && i.Layout.slideSize(0)) &&
                    kn(N(a.track)[o('width')] / n)) ||
                  (f[o('autoWidth')] && c.length) ||
                  2 * f.perPage)
              : (t = 0),
            t
          );
        }
        return { mount: u, destroy: e };
      },
      Move(r, c, o) {
        let e;
        let n = Q(r);
        const t = n.on;
        const f = n.emit;
        const a = r.state.set;
        const u = (n = c.Layout).slideSize;
        const i = n.getPadding;
        const s = n.totalSize;
        const l = n.listSize;
        const d = n.sliderSize;
        const v = (n = c.Direction).resolve;
        const h = n.orient;
        const p = (n = c.Elements).list;
        const g = n.track;
        function m() {
          c.Controller.isBusy() ||
            (c.Scroll.cancel(), y(r.index), c.Slides.update());
        }
        function y(n) {
          b(S(n, !0));
        }
        function b(n, t) {
          r.is(It) ||
            ((t = t
              ? n
              : (function (n) {
                  {
                    let t;
                    let i;
                    r.is(Pt) &&
                      ((t = k(n)),
                      (i = t > c.Controller.getEnd()),
                      (t < 0 || i) && (n = w(n, i)));
                  }
                  return n;
                })(n)),
            _(p, 'transform', `translate${v('X')}(${t}px)`),
            n !== t && f(Un));
        }
        function w(n, t) {
          const i = n - L(t);
          const r = d();
          return (n -= h(r * (kn(U(i) / r) || 1)) * (t ? 1 : -1));
        }
        function x() {
          b(E(), !0), e.cancel();
        }
        function k(n) {
          for (
            var t = c.Slides.get(), i = 0, r = 1 / 0, o = 0;
            o < t.length;
            o++
          ) {
            const u = t[o].index;
            const e = U(S(u, !0) - n);
            if (!(e <= r)) break;
            (r = e), (i = u);
          }
          return i;
        }
        function S(n, t) {
          var i = h(
            s(n - 1) -
              ((n = n),
              (i = o.focus) === 'center'
                ? (l() - u(n, !0)) / 2
                : +i * u(n) || 0),
          );
          return t
            ? ((n = i),
              (n = o.trimSpace && r.is(Mt) ? q(n, 0, h(d(!0) - l())) : n))
            : i;
        }
        function E() {
          const n = v('left');
          return N(p)[n] - N(g)[n] + h(i(!1));
        }
        function L(n) {
          return S(n ? c.Controller.getEnd() : 0, !!o.trimSpace);
        }
        return {
          mount() {
            (e = c.Transition), t([B, Nn, K, J], m);
          },
          move(n, t, i, r) {
            let o;
            let u;
            n !== t &&
              ((o = i < n),
              (u = h(w(E(), o))),
              o ? u >= 0 : u <= p[v('scrollWidth')] - N(g)[v('width')]) &&
              (x(), b(w(E(), i < n), !0)),
              a(G),
              f(H, t, i, n),
              e.start(t, function () {
                a(3), f(Dn, t, i, n), r && r();
              });
          },
          jump: y,
          translate: b,
          shift: w,
          cancel: x,
          toIndex: k,
          toPosition: S,
          getPosition: E,
          getLimit: L,
          exceededLimit(n, t) {
            t = en(t) ? E() : t;
            const i = !0 !== n && h(t) < h(L(!1));
            var n = !1 !== n && h(t) > h(L(!0));
            return i || n;
          },
          reposition: m,
        };
      },
      Controller(o, u, e) {
        let c;
        let f;
        let a;
        let s;
        let n = Q(o);
        const t = n.on;
        const i = n.emit;
        const l = u.Move;
        const d = l.getPosition;
        const r = l.getLimit;
        const v = l.toPosition;
        const h = (n = u.Slides).isEnough;
        const p = n.getLength;
        const g = e.omitEnd;
        const m = o.is(Pt);
        const y = o.is(Mt);
        const b = R(L, !1);
        const w = R(L, !0);
        let x = e.start || 0;
        let k = x;
        function S() {
          (f = p(!0)), (a = e.perMove), (s = e.perPage), (c = _());
          const n = q(x, 0, g ? c : f - 1);
          n !== x && ((x = n), l.reposition());
        }
        function E() {
          c !== _() && i('ei');
        }
        function L(n, t) {
          var i = a || (P() ? 1 : s);
          var i = O(x + i * (n ? -1 : 1), x, !(a || P()));
          return i === -1 && y && !Sn(d(), r(!n), 1)
            ? n
              ? 0
              : c
            : t
              ? i
              : A(i);
        }
        function O(n, t, i) {
          let r;
          return (
            h() || P()
              ? ((r = (function (n) {
                  if (y && e.trimSpace === 'move' && n !== x)
                    for (
                      let t = d();
                      t === v(n, !0) && En(n, 0, o.length - 1, !e.rewind);

                    )
                      n < x ? --n : ++n;
                  return n;
                })(n)) !== n && ((t = n), (n = r), (i = !1)),
                n < 0 || c < n
                  ? (n =
                      a || (!En(0, n, t, !0) && !En(c, t, n, !0))
                        ? m
                          ? i
                            ? n < 0
                              ? -(f % s || s)
                              : f
                            : n
                          : e.rewind
                            ? n < 0
                              ? c
                              : 0
                            : -1
                        : z(D(n)))
                  : i && n !== t && (n = z(D(t) + (n < t ? -1 : 1))))
              : (n = -1),
            n
          );
        }
        function A(n) {
          return m ? (n + f) % f || 0 : n;
        }
        function _() {
          for (var n = f - (P() || (m && a) ? 1 : s); g && n-- > 0; )
            if (v(f - 1, !0) !== v(n, !0)) {
              n++;
              break;
            }
          return q(n, 0, f - 1);
        }
        function z(n) {
          return q(P() ? n : s * n, 0, c);
        }
        function D(n) {
          return P() ? Y(n, c) : xn((c <= n ? f - 1 : n) / s);
        }
        function M(n) {
          n !== x && ((k = x), (x = n));
        }
        function P() {
          return !en(e.focus) || e.isNavigation;
        }
        function I() {
          return o.state.is([G, rn]) && !!e.waitForTransition;
        }
        return {
          mount() {
            S(), t([K, J, 'ei'], S), t(Nn, E);
          },
          go(n, t, i) {
            let r;
            I() ||
              ((r = A(
                (n = (function (n) {
                  let t = x;
                  {
                    let i;
                    let r;
                    C(n)
                      ? ((r = n.match(/([+\-<>])(\d+)?/) || []),
                        (i = r[1]),
                        (r = r[2]),
                        i === '+' || i === '-'
                          ? (t = O(x + +`${i}${+r || 1}`, x))
                          : i === '>'
                            ? (t = r ? z(+r) : b(!0))
                            : i === '<' && (t = w(!0)))
                      : (t = m ? n : q(n, 0, c));
                  }
                  return t;
                })(n)),
              )) > -1 &&
                (t || r !== x) &&
                (M(r), l.move(n, r, k, i)));
          },
          scroll(n, t, i, r) {
            u.Scroll.scroll(n, t, i, function () {
              const n = A(l.toIndex(d()));
              M(g ? Y(n, c) : n), r && r();
            });
          },
          getNext: b,
          getPrev: w,
          getAdjacent: L,
          getEnd: _,
          setIndex: M,
          getIndex(n) {
            return n ? k : x;
          },
          toIndex: z,
          toPage: D,
          toDest(n) {
            return (n = l.toIndex(n)), y ? q(n, 0, c) : n;
          },
          hasFocus: P,
          isBusy: I,
        };
      },
      Arrows(o, n, t) {
        let i;
        let r;
        const u = Q(o);
        const e = u.on;
        const c = u.bind;
        const f = u.emit;
        const a = t.classes;
        const s = t.i18n;
        const l = n.Elements;
        const d = n.Controller;
        const v = l.arrows;
        const h = l.track;
        let p = v;
        let g = l.prev;
        let m = l.next;
        const y = {};
        function b() {
          const n = t.arrows;
          !n ||
            (g && m) ||
            ((p = v || j('div', a.arrows)),
            (g = S(!0)),
            (m = S(!1)),
            (i = !0),
            L(p, [g, m]),
            v || O(p, h)),
            g &&
              m &&
              (an(y, { prev: g, next: m }),
              ln(p, n ? '' : 'none'),
              M(p, (r = `${dt}--${t.direction}`)),
              n &&
                (e([B, Dn, J, V, 'ei'], E),
                c(m, 'click', R(k, '>')),
                c(g, 'click', R(k, '<')),
                E(),
                I([g, m], Kn, h.id),
                f('arrows:mounted', g, m))),
            e(K, w);
        }
        function w() {
          x(), b();
        }
        function x() {
          u.destroy(),
            X(p, r),
            i ? (T(v ? [g, m] : p), (g = m = null)) : P([g, m], ut);
        }
        function k(n) {
          d.go(n, !0);
        }
        function S(n) {
          return hn(
            `<button class="${a.arrow} ${
              n ? a.prev : a.next
            }" type="button"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40 40" width="40" height="40" focusable="false"><path d="${
              t.arrowPath ||
              'm15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z'
            }" />`,
          );
        }
        function E() {
          let n;
          let t;
          let i;
          let r;
          g &&
            m &&
            ((r = o.index),
            (n = d.getPrev()),
            (t = d.getNext()),
            (i = n > -1 && r < n ? s.last : s.prev),
            (r = t > -1 && t < r ? s.first : s.next),
            (g.disabled = n < 0),
            (m.disabled = t < 0),
            I(g, nn, i),
            I(m, nn, r),
            f('arrows:updated', g, m, n, t));
        }
        return { arrows: y, mount: b, destroy: x, update: E };
      },
      Autoplay(n, t, i) {
        let r;
        let o;
        let u = Q(n);
        const e = u.on;
        const c = u.bind;
        const f = u.emit;
        const a = qn(i.interval, n.go.bind(n, '>'), function (n) {
          const t = l.bar;
          t && _(t, 'width', `${100 * n}%`), f('autoplay:playing', n);
        });
        const s = a.isPaused;
        var l = t.Elements;
        const d = (u = t.Elements).root;
        const v = u.toggle;
        const h = i.autoplay;
        let p = h === 'pause';
        function g() {
          s() &&
            t.Slides.isEnough() &&
            (a.start(!i.resetProgress), (o = r = p = !1), b(), f(Fn));
        }
        function m(n) {
          (p = !!(n = void 0 === n ? !0 : n)), b(), s() || (a.pause(), f(Xn));
        }
        function y() {
          p || (r || o ? m(!1) : g());
        }
        function b() {
          v && (A(v, tn, !p), I(v, nn, i.i18n[p ? 'play' : 'pause']));
        }
        function w(n) {
          n = t.Slides.getAt(n);
          a.set((n && +z(n.slide, Ct)) || i.interval);
        }
        return {
          mount() {
            h &&
              (i.pauseOnHover &&
                c(d, 'mouseenter mouseleave', function (n) {
                  (r = n.type === 'mouseenter'), y();
                }),
              i.pauseOnFocus &&
                c(d, 'focusin focusout', function (n) {
                  (o = n.type === 'focusin'), y();
                }),
              v &&
                c(v, 'click', function () {
                  p ? g() : m(!0);
                }),
              e([H, Tn, J], a.rewind),
              e(H, w),
              v && I(v, Kn, l.track.id),
              p || g(),
              b());
          },
          destroy: a.cancel,
          play: g,
          pause: m,
          isPaused: s,
        };
      },
      Cover(n, t, i) {
        const r = Q(n).on;
        function o(i) {
          t.Slides.forEach(function (n) {
            const t = fn(n.container || n.slide, 'img');
            t && t.src && u(i, t, n);
          });
        }
        function u(n, t, i) {
          i.style(
            'background',
            n ? `center/cover no-repeat url("${t.src}")` : '',
            !0,
          ),
            ln(t, n ? 'none' : '');
        }
        return {
          mount() {
            i.cover && (r(Wn, R(u, !0)), r([B, K, J], R(o, !0)));
          },
          destroy: R(o, !1),
        };
      },
      Scroll(n, c, u) {
        let f;
        let a;
        const t = Q(n);
        const i = t.on;
        const s = t.emit;
        const l = n.state.set;
        const d = c.Move;
        const v = d.getPosition;
        const e = d.getLimit;
        const h = d.exceededLimit;
        const p = d.translate;
        const g = n.is(Mt);
        let m = 1;
        function y(n, t, i, r, o) {
          let u;
          const e = v();
          var i =
            (x(),
            !i ||
              (g && h()) ||
              ((i = c.Layout.sliderSize()),
              (u = Ln(n) * i * xn(U(n) / i) || 0),
              (n = d.toPosition(c.Controller.toDest(n % i)) + u)),
            Sn(e, n, 1));
          (m = 1),
            (t = i ? 0 : t || wn(U(n - e) / 1.5, 800)),
            (a = r),
            (f = qn(t, b, R(w, e, n, o), 1)),
            l(rn),
            s(Tn),
            f.start();
        }
        function b() {
          l(3), a && a(), s(V);
        }
        function w(n, t, i, r) {
          const o = v();
          var r =
            (n +
              (t - n) *
                ((t = r), (n = u.easingFunc) ? n(t) : 1 - (1 - t) ** 4) -
              o) *
            m;
          p(o + r),
            g &&
              !i &&
              h() &&
              ((m *= 0.6), U(r) < 10 && y(e(h(!0)), 600, !1, a, !0));
        }
        function x() {
          f && f.cancel();
        }
        function r() {
          f && !f.isPaused() && (x(), b());
        }
        return {
          mount() {
            i(H, x), i([K, J], r);
          },
          destroy: x,
          scroll: y,
          cancel: r,
        };
      },
      Drag(e, o, c) {
        let f;
        let t;
        let u;
        let a;
        let s;
        let l;
        let d;
        let v;
        let n = Q(e);
        const i = n.on;
        const h = n.emit;
        const p = n.bind;
        const g = n.unbind;
        const m = e.state;
        const y = o.Move;
        const b = o.Scroll;
        const w = o.Controller;
        const x = o.Elements.track;
        const k = o.Media.reduce;
        const r = (n = o.Direction).resolve;
        const S = n.orient;
        const E = y.getPosition;
        const L = y.exceededLimit;
        let O = !1;
        function j() {
          const n = c.drag;
          C(!n), (a = n === 'free');
        }
        function N(n) {
          let t;
          let i;
          let r;
          (l = !1),
            d ||
              ((t = R(n)),
              (i = n.target),
              (r = c.noDrag),
              cn(i, `.${mt}, .${vt}`) ||
                (r && cn(i, r)) ||
                (!t && n.button) ||
                (w.isBusy()
                  ? F(n, !0)
                  : ((v = t ? x : window),
                    (s = m.is([G, rn])),
                    (u = null),
                    p(v, zt, A, jt),
                    p(v, Dt, _, jt),
                    y.cancel(),
                    b.cancel(),
                    z(n))));
        }
        function A(n) {
          let t;
          let i;
          let r;
          let o;
          let u;
          m.is(6) || (m.set(6), h('drag')),
            n.cancelable &&
              (s
                ? (y.translate(f + D(n) / (O && e.is(Mt) ? 5 : 1)),
                  (u = M(n) > 200),
                  (t = O !== (O = L())),
                  (u || t) && z(n),
                  (l = !0),
                  h('dragging'),
                  F(n))
                : U(D((u = n))) > U(D(u, !0)) &&
                  ((t = n),
                  (i = c.dragMinThreshold),
                  (r = un(i)),
                  (o = (r && i.mouse) || 0),
                  (r = (r ? i.touch : +i) || 10),
                  (s = U(D(t)) > (R(t) ? r : o)),
                  F(n)));
        }
        function _(n) {
          let t;
          let i;
          let r;
          m.is(6) && (m.set(3), h('dragged')),
            s &&
              ((i = (function (n) {
                return (
                  E() +
                  Ln(n) *
                    Y(
                      U(n) * (c.flickPower || 600),
                      a ? 1 / 0 : o.Layout.listSize() * (c.flickMaxPages || 1),
                    )
                );
              })(
                (t = (function (n) {
                  if (e.is(Pt) || !O) {
                    const t = M(n);
                    if (t && t < 200) return D(n) / t;
                  }
                  return 0;
                })((t = n))),
              )),
              (r = c.rewind && c.rewindByDrag),
              k(!1),
              a
                ? w.scroll(i, 0, c.snap)
                : e.is(It)
                  ? w.go(S(Ln(t)) < 0 ? (r ? '<' : '-') : r ? '>' : '+')
                  : e.is(Mt) && O && r
                    ? w.go(L(!0) ? '>' : '<')
                    : w.go(w.toDest(i), !0),
              k(!0),
              F(n)),
            g(v, zt, A),
            g(v, Dt, _),
            (s = !1);
        }
        function T(n) {
          !d && l && F(n, !0);
        }
        function z(n) {
          (u = t), (t = n), (f = E());
        }
        function D(n, t) {
          return I(n, t) - I(P(n), t);
        }
        function M(n) {
          return mn(n) - mn(P(n));
        }
        function P(n) {
          return (t === n && u) || t;
        }
        function I(n, t) {
          return (R(n) ? n.changedTouches[0] : n)[`page${r(t ? 'Y' : 'X')}`];
        }
        function R(n) {
          return typeof TouchEvent !== 'undefined' && n instanceof TouchEvent;
        }
        function C(n) {
          d = n;
        }
        return {
          mount() {
            p(x, zt, on, jt),
              p(x, Dt, on, jt),
              p(x, _t, N, jt),
              p(x, 'click', T, { capture: !0 }),
              p(x, 'dragstart', F),
              i([B, K], j);
          },
          disable: C,
          isDragging() {
            return s;
          },
        };
      },
      Keyboard(t, n, i) {
        let r;
        let o;
        const u = Q(t);
        const e = u.on;
        const c = u.bind;
        const f = u.unbind;
        const a = t.root;
        const s = n.Direction.resolve;
        function l() {
          const n = i.keyboard;
          n && ((r = n === 'global' ? window : a), c(r, Gt, h));
        }
        function d() {
          f(r, Gt);
        }
        function v() {
          const n = o;
          (o = !0),
            p(function () {
              o = n;
            });
        }
        function h(n) {
          o || ((n = Tt(n)) === s(Bn) ? t.go('<') : n === s(Hn) && t.go('>'));
        }
        return {
          mount() {
            l(), e(K, d), e(K, l), e(H, v);
          },
          destroy: d,
          disable(n) {
            o = n;
          },
        };
      },
      LazyLoad(i, n, o) {
        const t = Q(i);
        const r = t.on;
        const u = t.off;
        const e = t.bind;
        const c = t.emit;
        const f = o.lazyLoad === 'sequential';
        const a = [Dn, V];
        let s = [];
        function l() {
          D(s),
            n.Slides.forEach(function (r) {
              gn(r.slide, Wt).forEach(function (n) {
                let t = z(n, Ft);
                let i = z(n, Xt);
                (t === n.src && i === n.srcset) ||
                  ((t = o.classes.spinner),
                  (t = fn((i = n.parentElement), `.${t}`) || j('span', t, i)),
                  s.push([n, r, t]),
                  n.src || ln(n, 'none'));
              });
            }),
            (f ? p : (u(a), r(a, d), d))();
        }
        function d() {
          (s = s.filter(function (n) {
            const t = o.perPage * ((o.preloadPages || 1) + 1) - 1;
            return !n[1].isWithin(i.index, t) || v(n);
          })).length || u(a);
        }
        function v(n) {
          const t = n[0];
          M(n[1].slide, Et),
            e(t, 'load error', R(h, n)),
            I(t, 'src', z(t, Ft)),
            I(t, 'srcset', z(t, Xt)),
            P(t, Ft),
            P(t, Xt);
        }
        function h(n, t) {
          const i = n[0];
          const r = n[1];
          X(r.slide, Et),
            t.type !== 'error' && (T(n[2]), ln(i, ''), c(Wn, i, r), c(jn)),
            f && p();
        }
        function p() {
          s.length && v(s.shift());
        }
        return {
          mount() {
            o.lazyLoad && (l(), r(J, l));
          },
          destroy: R(D, s),
          check: d,
        };
      },
      Pagination(l, n, d) {
        let v;
        let h;
        const t = Q(l);
        const p = t.on;
        const g = t.emit;
        const m = t.bind;
        const y = n.Slides;
        const b = n.Elements;
        const w = n.Controller;
        const x = w.hasFocus;
        const r = w.getIndex;
        const e = w.go;
        const c = n.Direction.resolve;
        const k = b.pagination;
        const S = [];
        function E() {
          v && (T(k ? o(v.children) : v), X(v, h), D(S), (v = null)),
            t.destroy();
        }
        function L(n) {
          e(`>${n}`, !0);
        }
        function O(n, t) {
          const i = S.length;
          const r = Tt(t);
          var o = A();
          let u = -1;
          var o =
            (r === c(Hn, !1, o)
              ? (u = ++n % i)
              : r === c(Bn, !1, o)
                ? (u = (--n + i) % i)
                : r === 'Home'
                  ? (u = 0)
                  : r === 'End' && (u = i - 1),
            S[u]);
          o && (dn(o.button), e(`>${u}`), F(t, !0));
        }
        function A() {
          return d.paginationDirection || d.direction;
        }
        function _(n) {
          return S[w.toPage(n)];
        }
        function z() {
          let n;
          const t = _(r(!0));
          const i = _(r());
          t && (X((n = t.button), tn), P(n, Qn), I(n, $, -1)),
            i && (M((n = i.button), tn), I(n, Qn, !0), I(n, $, '')),
            g('pagination:updated', { list: v, items: S }, t, i);
        }
        return {
          items: S,
          mount: function n() {
            E(), p([K, J, 'ei'], n);
            var t = d.pagination;
            if ((k && ln(k, t ? '' : 'none'), t)) {
              p([H, Tn, V], z);
              var t = l.length;
              const i = d.classes;
              const r = d.i18n;
              const o = d.perPage;
              const u = x() ? w.getEnd() + 1 : kn(t / o);
              M(
                (v = k || j('ul', i.pagination, b.track.parentElement)),
                (h = `${gt}--${A()}`),
              ),
                I(v, Z, 'tablist'),
                I(v, nn, r.select),
                I(v, nt, A() === Jn ? 'vertical' : '');
              for (let e = 0; e < u; e++) {
                const c = j('li', null, v);
                const f = j('button', { class: i.page, type: 'button' }, c);
                const a = y.getIn(e).map(function (n) {
                  return n.slide.id;
                });
                const s = !x() && o > 1 ? r.pageX : r.slideX;
                m(f, 'click', R(L, e)),
                  d.paginationKeyboard && m(f, 'keydown', R(O, e)),
                  I(c, Z, 'presentation'),
                  I(f, Z, 'tab'),
                  I(f, Kn, a.join(' ')),
                  I(f, nn, On(s, e + 1)),
                  I(f, $, -1),
                  S.push({ li: c, button: f, page: e });
              }
              z(), g('pagination:mounted', { list: v, items: S }, _(l.index));
            }
          },
          destroy: E,
          getAt: _,
          update: z,
        };
      },
      Sync(i, n, t) {
        const r = t.isNavigation;
        const o = t.slideFocus;
        const u = [];
        function e() {
          let n;
          let t;
          i.splides.forEach(function (n) {
            n.isParent || (f(i, n.splide), f(n.splide, i));
          }),
            r &&
              ((n = Q(i)),
              (t = n.on)(Mn, s),
              t(Yn, l),
              t([B, K], a),
              u.push(n),
              n.emit(Gn, i.splides));
        }
        function c() {
          u.forEach(function (n) {
            n.destroy();
          }),
            D(u);
        }
        function f(n, r) {
          n = Q(n);
          n.on(H, function (n, t, i) {
            r.go(r.is(Pt) ? i : n);
          }),
            u.push(n);
        }
        function a() {
          I(n.Elements.list, nt, t.direction === Jn ? 'vertical' : '');
        }
        function s(n) {
          i.go(n.index);
        }
        function l(n, t) {
          b(Yt, Tt(t)) && (s(n), F(t));
        }
        return {
          setup: R(n.Media.set, { slideFocus: en(o) ? r : o }, !0),
          mount: e,
          destroy: c,
          remount() {
            c(), e();
          },
        };
      },
      Wheel(e, c, f) {
        const n = Q(e).bind;
        let a = 0;
        function t(n) {
          let t;
          let i;
          let r;
          let o;
          let u;
          n.cancelable &&
            ((t = (u = n.deltaY) < 0),
            (i = mn(n)),
            (r = f.wheelMinThreshold || 0),
            (o = f.wheelSleep || 0),
            U(u) > r && o < i - a && (e.go(t ? '<' : '>'), (a = i)),
            (u = t),
            (f.releaseWheel &&
              !e.state.is(G) &&
              c.Controller.getAdjacent(u) === -1) ||
              F(n));
        }
        return {
          mount() {
            f.wheel && n(c.Elements.track, 'wheel', t, jt);
          },
        };
      },
      Live(n, t, i) {
        const r = Q(n).on;
        const o = t.Elements.track;
        const u = i.live && !i.isNavigation;
        const e = j('span', wt);
        const c = qn(90, R(f, !1));
        function f(n) {
          I(o, rt, n), n ? (L(o, e), c.start()) : (T(e), c.cancel());
        }
        function a(n) {
          u && I(o, it, n ? 'off' : 'polite');
        }
        return {
          mount() {
            u &&
              (a(!t.Autoplay.isPaused()),
              I(o, ot, !0),
              (e.textContent = '…'),
              r(Fn, R(a, !0)),
              r(Xn, R(a, !1)),
              r([Dn, V], R(f, !0)));
          },
          disable: a,
          destroy() {
            P(o, [it, ot, rt]), T(e);
          },
        };
      },
    });
    const qt = {
      type: 'slide',
      role: 'region',
      speed: 400,
      perPage: 1,
      cloneStatus: !0,
      arrows: !0,
      pagination: !0,
      paginationKeyboard: !0,
      interval: 5e3,
      pauseOnHover: !0,
      pauseOnFocus: !0,
      resetProgress: !0,
      easing: 'cubic-bezier(0.25, 1, 0.5, 1)',
      drag: !0,
      direction: 'ltr',
      trimSpace: !0,
      focusableNodes: 'a, button, textarea, input, select, iframe',
      live: !0,
      classes: {
        slide: at,
        clone: st,
        arrows: dt,
        arrow: vt,
        prev: ht,
        next: pt,
        pagination: gt,
        page: mt,
        spinner: `${i}spinner`,
      },
      i18n: {
        prev: 'Previous slide',
        next: 'Next slide',
        first: 'Go to first slide',
        last: 'Go to last slide',
        slideX: 'Go to slide %s',
        pageX: 'Go to page %s',
        play: 'Start autoplay',
        pause: 'Pause autoplay',
        carousel: 'carousel',
        slide: 'slide',
        select: 'Select a slide to show',
        slideLabel: '%s of %s',
      },
      reducedMotion: { speed: 0, rewindSpeed: 0, autoplay: 'pause' },
    };
    function Bt(n, t, i) {
      const r = t.Slides;
      function o() {
        r.forEach(function (n) {
          n.style('transform', `translateX(-${100 * n.index}%)`);
        });
      }
      return {
        mount() {
          Q(n).on([B, J], o);
        },
        start(n, t) {
          r.style('transition', `opacity ${i.speed}ms ${i.easing}`), p(t);
        },
        cancel: on,
      };
    }
    function Ht(u, n, e) {
      let c;
      const f = n.Move;
      const a = n.Controller;
      const s = n.Scroll;
      const t = n.Elements.list;
      const l = R(_, t, 'transition');
      function i() {
        l(''), s.cancel();
      }
      return {
        mount() {
          Q(u).bind(t, 'transitionend', function (n) {
            n.target === t && c && (i(), c());
          });
        },
        start(n, t) {
          const i = f.toPosition(n, !0);
          const r = f.getPosition();
          const o = (function (n) {
            const t = e.rewindSpeed;
            if (u.is(Mt) && t) {
              const i = a.getIndex(!0);
              const r = a.getEnd();
              if ((i === 0 && r <= n) || (r <= i && n === 0)) return t;
            }
            return e.speed;
          })(n);
          U(i - r) >= 1 && o >= 1
            ? e.useScroll
              ? s.scroll(i, o, !1, t)
              : (l(`transform ${o}ms ${e.easing}`), f.translate(i, !0), (c = t))
            : (f.jump(n), t());
        },
        cancel: i,
      };
    }
    t = (function () {
      function i(n, t) {
        (this.event = Q()),
          (this.Components = {}),
          (this.state = s(1)),
          (this.splides = []),
          (this.n = {}),
          (this.t = {});
        n = C(n) ? pn(document, n) : n;
        bn(n, `${n} is invalid.`),
          (t = d(
            { label: z((this.root = n), nn) || '', labelledby: z(n, Zn) || '' },
            qt,
            i.defaults,
            t || {},
          ));
        try {
          d(t, JSON.parse(z(n, f)));
        } catch (n) {
          bn(!1, 'Invalid JSON');
        }
        this.n = Object.create(d({}, t));
      }
      const n = i.prototype;
      return (
        (n.mount = function (n, t) {
          const i = this;
          const r = this.state;
          const o = this.Components;
          return (
            bn(r.is([1, 7]), 'Already mounted!'),
            r.set(1),
            (this.i = o),
            (this.r = t || this.r || (this.is(It) ? Bt : Ht)),
            (this.t = n || this.t),
            w(an({}, Ut, this.t, { Transition: this.r }), function (n, t) {
              n = n(i, o, i.n);
              (o[t] = n).setup && n.setup();
            }),
            w(o, function (n) {
              n.mount && n.mount();
            }),
            this.emit(B),
            M(this.root, 'is-initialized'),
            r.set(3),
            this.emit('ready'),
            this
          );
        }),
        (n.sync = function (n) {
          return (
            this.splides.push({ splide: n }),
            n.splides.push({ splide: this, isParent: !0 }),
            this.state.is(3) &&
              (this.i.Sync.remount(), n.Components.Sync.remount()),
            this
          );
        }),
        (n.go = function (n) {
          return this.i.Controller.go(n), this;
        }),
        (n.on = function (n, t) {
          return this.event.on(n, t), this;
        }),
        (n.off = function (n) {
          return this.event.off(n), this;
        }),
        (n.emit = function (n) {
          let t;
          return (
            (t = this.event).emit.apply(t, [n].concat(o(arguments, 1))), this
          );
        }),
        (n.add = function (n, t) {
          return this.i.Slides.add(n, t), this;
        }),
        (n.remove = function (n) {
          return this.i.Slides.remove(n), this;
        }),
        (n.is = function (n) {
          return this.n.type === n;
        }),
        (n.refresh = function () {
          return this.emit(J), this;
        }),
        (n.destroy = function (t) {
          void 0 === t && (t = !0);
          const n = this.event;
          const i = this.state;
          return (
            i.is(1)
              ? Q(this).on('ready', this.destroy.bind(this, t))
              : (w(
                  this.i,
                  function (n) {
                    n.destroy && n.destroy(t);
                  },
                  !0,
                ),
                n.emit(a),
                n.destroy(),
                t && D(this.splides),
                i.set(7)),
            this
          );
        }),
        Jt(i, [
          {
            key: 'options',
            get() {
              return this.n;
            },
            set(n) {
              this.i.Media.set(n, !0, !0);
            },
          },
          {
            key: 'length',
            get() {
              return this.i.Slides.getLength(!0);
            },
          },
          {
            key: 'index',
            get() {
              return this.i.Controller.getIndex();
            },
          },
        ]),
        i
      );
    })();
    return (t.defaults = {}), (t.STATES = r), t;
  }),
  typeof exports === 'object' && typeof module !== 'undefined'
    ? (module.exports = t())
    : typeof define === 'function' && define.amd
      ? define(t)
      : ((n =
          typeof globalThis !== 'undefined' ? globalThis : n || self).Splide =
          t());
// # sourceMappingURL=splide.min.js.map
